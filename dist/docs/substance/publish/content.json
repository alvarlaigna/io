{
  "id": "publish",
  "schema": [
    "substance-article",
    "0.1.0"
  ],
  "nodes": {
    "document": {
      "type": "document",
      "id": "document",
      "views": [
        "content",
        "figures",
        "info"
      ],
      "guid": "publish",
      "creator": "",
      "title": "Publish an article on Substance.io",
      "abstract": "",
      "published_on": "2013-10-10T22:39:07.439Z",
      "meta": {}
    },
    "content": {
      "type": "view",
      "id": "content",
      "nodes": [
        "cover",
        "text_1",
        "text_2",
        "header_1",
        "text_3",
        "codeblock_1",
        "text_4",
        "codeblock_2",
        "text_5",
        "codeblock_3",
        "text_6",
        "text_7",
        "codeblock_4",
        "text_8",
        "codeblock_5",
        "header_2",
        "text_9",
        "text_10",
        "text_11",
        "codeblock_6",
        "text_12",
        "header_3",
        "text_13",
        "text_14",
        "codeblock_7",
        "text_15",
        "codeblock_8",
        "text_16",
        "header_4",
        "text_17",
        "text_18",
        "codeblock_9",
        "text_19",
        "codeblock_10",
        "text_20",
        "header_5",
        "text_21",
        "codeblock_11",
        "text_22"
      ]
    },
    "text_1": {
      "type": "text",
      "id": "text_1",
      "source_id": null,
      "content": "We'd like to invite you to publish guest articles on Substance.io. We'll create new collections on demand to categorize articles coming from the community."
    },
    "text_2": {
      "type": "text",
      "id": "text_2",
      "source_id": null,
      "content": "Substance.io is powered by our minimal publishing system, IO. It lets you write articles in Markdown and define figures, tables etc. in a simple JSON syntax. All that input is compiled into a full-fledged Substance Article including the main content, meta information like the title and authors and figures you have specified. It works similarly to Jekyll, a static site generator written in Ruby. Compiled IO document repositories can be hosted on any webserver. It's just a bunch of static HTML + JSON files."
    },
    "header_1": {
      "type": "heading",
      "id": "header_1",
      "source_id": "install-io",
      "content": "Install IO",
      "level": 2
    },
    "text_3": {
      "type": "text",
      "id": "text_3",
      "source_id": null,
      "content": "Installing IO locally is pretty easy using NPM."
    },
    "codeblock_1": {
      "type": "codeblock",
      "id": "codeblock_1",
      "source_id": "",
      "content": "$ npm install substance-io -g"
    },
    "text_4": {
      "type": "text",
      "id": "text_4",
      "source_id": null,
      "content": "The proposed workflow for adding your own docs is forking the Substance Docs repository and running IO against it."
    },
    "codeblock_2": {
      "type": "codeblock",
      "id": "codeblock_2",
      "source_id": "",
      "content": "$ git clone https://github.com/your_user/docs.git\n$ cd docs"
    },
    "text_5": {
      "type": "text",
      "id": "text_5",
      "source_id": null,
      "content": "Run IO."
    },
    "codeblock_3": {
      "type": "codeblock",
      "id": "codeblock_3",
      "source_id": "",
      "content": "$ io"
    },
    "text_6": {
      "type": "text",
      "id": "text_6",
      "source_id": null,
      "content": "And point your browser to http://localhost:5000"
    },
    "text_7": {
      "type": "text",
      "id": "text_7",
      "source_id": null,
      "content": "If you want, you can point io to a different folder:"
    },
    "codeblock_4": {
      "type": "codeblock",
      "id": "codeblock_4",
      "source_id": "",
      "content": "$ io <path-to-library-folder>"
    },
    "text_8": {
      "type": "text",
      "id": "text_8",
      "source_id": null,
      "content": "To use a different port you would call:"
    },
    "codeblock_5": {
      "type": "codeblock",
      "id": "codeblock_5",
      "source_id": "",
      "content": "$ PORT=5123 io"
    },
    "header_2": {
      "type": "heading",
      "id": "header_2",
      "source_id": "add-a-new-collection",
      "content": "Add a new collection",
      "level": 2
    },
    "text_9": {
      "type": "text",
      "id": "text_9",
      "source_id": null,
      "content": "Let's suppose you'd like to write an article about Javascript Inheritance. All you need is your favorite text editor."
    },
    "text_10": {
      "type": "text",
      "id": "text_10",
      "source_id": null,
      "content": "Let's add a new collection Javascript by just creating a folder javascript within the docs folder."
    },
    "text_11": {
      "type": "text",
      "id": "text_11",
      "source_id": null,
      "content": "Every collection requires to have some meta-information attached, which are specified in an index.json file."
    },
    "codeblock_6": {
      "type": "codeblock",
      "id": "codeblock_6",
      "source_id": "",
      "content": "{\n  \"name\": \"Javascript\",\n  \"published\": true,\n  \"updated_at\": \"2013-11-30\",\n  \"image\": \"http://example.com/javascript.png\",\n  \"description\": \"Javascript-related articles.\"\n}"
    },
    "text_12": {
      "type": "text",
      "id": "text_12",
      "source_id": null,
      "content": "Now point your browser to http://localhost:5000/#explore and you should see the new Javascript collection."
    },
    "header_3": {
      "type": "heading",
      "id": "header_3",
      "source_id": "add-a-new-document",
      "content": "Add a new document",
      "level": 2
    },
    "text_13": {
      "type": "text",
      "id": "text_13",
      "source_id": null,
      "content": "Each document lives in a folder within the collection. Let's create a folder docs/javascript/inheritance. Every document requires to have an index.json containing meta-information as well as a content.md which has the document's main content."
    },
    "text_14": {
      "type": "text",
      "id": "text_14",
      "source_id": null,
      "content": "Our index.json could look like this:"
    },
    "codeblock_7": {
      "type": "codeblock",
      "id": "codeblock_7",
      "source_id": "",
      "content": "{\n  \"title\": \"Understanding Javascript Inheritance\",\n  \"published\": true,\n  \"published_on\": \"2013-10-05\",\n  \"collaborators\": [\n    {\n      \"name\": \"John Doe\"\n    }\n  ]\n}"
    },
    "text_15": {
      "type": "text",
      "id": "text_15",
      "source_id": null,
      "content": "And a sample content.md."
    },
    "codeblock_8": {
      "type": "codeblock",
      "id": "codeblock_8",
      "source_id": "",
      "content": "A lesson about JS inheritance.\n\n1. Constructor functions\n2. prototype\n3. new"
    },
    "text_16": {
      "type": "text",
      "id": "text_16",
      "source_id": null,
      "content": "You you can preview at any time by refreshing http://localhost:5000/javascript/inheritance in your browser."
    },
    "header_4": {
      "type": "heading",
      "id": "header_4",
      "source_id": "figures",
      "content": "Figures",
      "level": 2
    },
    "text_17": {
      "type": "text",
      "id": "text_17",
      "source_id": null,
      "content": "Markdown has limitations when it comes to rich content, e.g. tables and figures. With Substance you can specify figures and tables in a separate file and reference them from your main document using markdown syntax."
    },
    "text_18": {
      "type": "text",
      "id": "text_18",
      "source_id": null,
      "content": "Let's add an illustrative figure to our article by creating a resources.json file in our article folder."
    },
    "codeblock_9": {
      "type": "codeblock",
      "id": "codeblock_9",
      "source_id": "",
      "content": "{\n  \"figures\": [\n    {\n      \"id\": \"figure_1\",\n      \"type\": \"figure\",\n      \"label\": \"Figure 1\",\n      \"url\": \"http://example.com/js-inheritance.png\",\n      \"caption\": \"Illustration describing the functioning of the prototype chain in Javascript\"\n    }\n  ]\n}"
    },
    "text_19": {
      "type": "text",
      "id": "text_19",
      "source_id": null,
      "content": "Now reference that figure in your main text using its id."
    },
    "codeblock_10": {
      "type": "codeblock",
      "id": "codeblock_10",
      "source_id": "",
      "content": "In Javascript there's a concept called Prototypal Inheritance ([Figure 1](figure_1))."
    },
    "text_20": {
      "type": "text",
      "id": "text_20",
      "source_id": null,
      "content": "Soon you'll be able to manage citations as well."
    },
    "header_5": {
      "type": "heading",
      "id": "header_5",
      "source_id": "submit-your-article",
      "content": "Submit your article",
      "level": 2
    },
    "text_21": {
      "type": "text",
      "id": "text_21",
      "source_id": null,
      "content": "Commit your changes using Git."
    },
    "codeblock_11": {
      "type": "codeblock",
      "id": "codeblock_11",
      "source_id": "",
      "content": "$ cd docs\n$ git add javascript/inheritance/index.json <...>\n$ git commit\n$ git push origin 0.1.x"
    },
    "text_22": {
      "type": "text",
      "id": "text_22",
      "source_id": null,
      "content": "Now that you pushed your changes to your fork, the last step is filing a Pull Request on Github. We'll review your submitted article and put it live as soon as possible."
    },
    "link_1": {
      "type": "link",
      "id": "link_1",
      "path": [
        "text_2",
        "content"
      ],
      "range": [
        58,
        60
      ],
      "url": "http://github.com/substance/io"
    },
    "link_2": {
      "type": "link",
      "id": "link_2",
      "path": [
        "text_2",
        "content"
      ],
      "range": [
        349,
        355
      ],
      "url": "http://jekyllrb.com/"
    },
    "link_3": {
      "type": "link",
      "id": "link_3",
      "path": [
        "text_2",
        "content"
      ],
      "range": [
        492,
        503
      ],
      "url": "https://github.com/substance/io/tree/master/dist"
    },
    "link_4": {
      "type": "link",
      "id": "link_4",
      "path": [
        "text_4",
        "content"
      ],
      "range": [
        50,
        57
      ],
      "url": "https://help.github.com/articles/fork-a-repo"
    },
    "link_5": {
      "type": "link",
      "id": "link_5",
      "path": [
        "text_4",
        "content"
      ],
      "range": [
        62,
        76
      ],
      "url": "http://github.com/substance/docs"
    },
    "code_1": {
      "type": "code",
      "id": "code_1",
      "path": [
        "text_6",
        "content"
      ],
      "range": [
        26,
        47
      ]
    },
    "code_2": {
      "type": "code",
      "id": "code_2",
      "path": [
        "text_7",
        "content"
      ],
      "range": [
        27,
        29
      ]
    },
    "code_3": {
      "type": "code",
      "id": "code_3",
      "path": [
        "text_10",
        "content"
      ],
      "range": [
        64,
        74
      ]
    },
    "code_4": {
      "type": "code",
      "id": "code_4",
      "path": [
        "text_11",
        "content"
      ],
      "range": [
        92,
        102
      ]
    },
    "code_5": {
      "type": "code",
      "id": "code_5",
      "path": [
        "text_12",
        "content"
      ],
      "range": [
        26,
        56
      ]
    },
    "code_6": {
      "type": "code",
      "id": "code_6",
      "path": [
        "text_13",
        "content"
      ],
      "range": [
        77,
        104
      ]
    },
    "code_7": {
      "type": "code",
      "id": "code_7",
      "path": [
        "text_13",
        "content"
      ],
      "range": [
        141,
        151
      ]
    },
    "code_8": {
      "type": "code",
      "id": "code_8",
      "path": [
        "text_13",
        "content"
      ],
      "range": [
        193,
        203
      ]
    },
    "code_9": {
      "type": "code",
      "id": "code_9",
      "path": [
        "text_15",
        "content"
      ],
      "range": [
        13,
        23
      ]
    },
    "code_10": {
      "type": "code",
      "id": "code_10",
      "path": [
        "text_16",
        "content"
      ],
      "range": [
        46,
        90
      ]
    },
    "code_11": {
      "type": "code",
      "id": "code_11",
      "path": [
        "text_18",
        "content"
      ],
      "range": [
        62,
        76
      ]
    },
    "link_6": {
      "type": "link",
      "id": "link_6",
      "path": [
        "text_22",
        "content"
      ],
      "range": [
        73,
        85
      ],
      "url": "https://help.github.com/articles/using-pull-requests"
    },
    "figures": {
      "type": "view",
      "id": "figures",
      "nodes": []
    },
    "info": {
      "type": "view",
      "id": "info",
      "nodes": [
        "collaborator_1",
        "collaborator_2"
      ]
    },
    "collaborator_1": {
      "type": "collaborator",
      "id": "collaborator_1",
      "source_id": "",
      "name": "Michael Aufreiter",
      "role": "author",
      "organization": "Quasipartikel",
      "image": "https://2.gravatar.com/avatar/d5a959d7e57daa5433fcb9f8da40be4b?d=https%3A%2F%2Fidenticons.github.com%2F86c4ad52768c511046fea7b2d42b300c.png&s=420",
      "email": "michael@substance.io",
      "contribution": ""
    },
    "collaborator_2": {
      "type": "collaborator",
      "id": "collaborator_2",
      "source_id": "",
      "name": "Oliver Buchtala",
      "role": "author",
      "organization": "Quasipartikel",
      "image": "http://interior.substance.io/assets/images/team/oliver.png",
      "email": "oliver.buchtala@gmail.com",
      "contribution": ""
    },
    "collaborator_reference_1": {
      "type": "person_reference",
      "id": "collaborator_reference_1",
      "path": [
        "cover",
        "authors",
        "1"
      ],
      "range": [
        0,
        17
      ],
      "target": "collaborator_1"
    },
    "collaborator_reference_2": {
      "type": "person_reference",
      "id": "collaborator_reference_2",
      "path": [
        "cover",
        "authors",
        "2"
      ],
      "range": [
        0,
        15
      ],
      "target": "collaborator_2"
    },
    "cover": {
      "type": "cover",
      "id": "cover",
      "source_id": "",
      "authors": [
        "collaborator_reference_1",
        "collaborator_reference_2"
      ],
      "image": ""
    }
  }
}