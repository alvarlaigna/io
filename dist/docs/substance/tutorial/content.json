{
  "id": "tutorial",
  "schema": [
    "substance-article",
    "0.1.0"
  ],
  "nodes": {
    "document": {
      "type": "document",
      "id": "document",
      "views": [
        "content",
        "figures",
        "info"
      ],
      "guid": "tutorial",
      "creator": "",
      "title": "Substance Tutorial",
      "abstract": "",
      "published_on": "2013-10-08T16:04:01.141Z",
      "meta": {}
    },
    "content": {
      "type": "view",
      "id": "content",
      "nodes": [
        "cover",
        "text_1",
        "list_1",
        "header_1",
        "text_6",
        "list_2",
        "text_9",
        "codeblock_1",
        "text_10",
        "text_11",
        "codeblock_2",
        "text_12",
        "codeblock_3",
        "header_2",
        "text_13",
        "header_3",
        "text_14",
        "codeblock_4",
        "text_15",
        "text_16",
        "header_4",
        "text_17",
        "codeblock_5",
        "text_18",
        "codeblock_6",
        "text_19",
        "header_5",
        "text_20",
        "header_6",
        "text_21",
        "codeblock_7",
        "text_22",
        "codeblock_8",
        "text_23",
        "header_7",
        "text_24",
        "codeblock_9",
        "header_8",
        "text_25",
        "header_9",
        "text_26"
      ]
    },
    "text_1": {
      "type": "text",
      "id": "text_1",
      "source_id": null,
      "content": "Welcome to the official Substance Tutorial. You'll learn:"
    },
    "text_2": {
      "type": "text",
      "id": "text_2",
      "source_id": null,
      "content": "How to convert a markdown file into a Substance Article"
    },
    "text_3": {
      "type": "text",
      "id": "text_3",
      "source_id": null,
      "content": "Display Substance content in our interactive reader."
    },
    "text_4": {
      "type": "text",
      "id": "text_4",
      "source_id": null,
      "content": "Create a customized renderer"
    },
    "text_5": {
      "type": "text",
      "id": "text_5",
      "source_id": null,
      "content": "Submit a publication to Substance.io"
    },
    "list_1": {
      "type": "list",
      "id": "list_1",
      "source_id": "",
      "items": [
        "text_2",
        "text_3",
        "text_4",
        "text_5"
      ],
      "ordered": true
    },
    "header_1": {
      "type": "heading",
      "id": "header_1",
      "source_id": "preparations",
      "content": "Preparations",
      "level": 1
    },
    "text_6": {
      "type": "text",
      "id": "text_6",
      "source_id": null,
      "content": "Make sure you have the following software packages installed on your computer before starting over with the tutorial."
    },
    "text_7": {
      "type": "text",
      "id": "text_7",
      "source_id": null,
      "content": "Node.js >=0.10.x"
    },
    "text_8": {
      "type": "text",
      "id": "text_8",
      "source_id": null,
      "content": "Pandoc >= 1.12.x"
    },
    "list_2": {
      "type": "list",
      "id": "list_2",
      "source_id": "",
      "items": [
        "text_7",
        "text_8"
      ],
      "ordered": false
    },
    "text_9": {
      "type": "text",
      "id": "text_9",
      "source_id": null,
      "content": "Please fork and clone the Substance Tutorial repo."
    },
    "codeblock_1": {
      "type": "codeblock",
      "id": "codeblock_1",
      "source_id": "",
      "content": "$ git clone https://github.com/your_user/substance-tutorial"
    },
    "text_10": {
      "type": "text",
      "id": "text_10",
      "source_id": null,
      "content": "During the tutorial we'd like to encourage you to review the contents of the tutorial. If you spot an error please just fix it, push it to your fork and file a Pull Request on Github."
    },
    "text_11": {
      "type": "text",
      "id": "text_11",
      "source_id": null,
      "content": "Throughout our tutorial we are using the Substance Screwdriver to manage dependencies. The tutorial always runs against the latest stable dev versions. Please note that for all official releases we also provide NPM packages."
    },
    "codeblock_2": {
      "type": "codeblock",
      "id": "codeblock_2",
      "source_id": "",
      "content": "$ git clone https://github.com/substance/screwdriver.git\n$ cd screwdriver\n$ sudo python setup.py install"
    },
    "text_12": {
      "type": "text",
      "id": "text_12",
      "source_id": null,
      "content": "Now you should be able to run the substance program from the command line."
    },
    "codeblock_3": {
      "type": "codeblock",
      "id": "codeblock_3",
      "source_id": "",
      "content": "$ substance --help"
    },
    "header_2": {
      "type": "heading",
      "id": "header_2",
      "source_id": "convert",
      "content": "Turn a markdown file into a Substance Article",
      "level": 1
    },
    "text_13": {
      "type": "text",
      "id": "text_13",
      "source_id": null,
      "content": "Here comes lesson one. Let's suppose we have a markdown document lorem_ipsum.md that we'd like to turn into a Substance.Article. Substance comes with its own converter, available as a separate module. It makes use of Pandoc, a universal document conversion tool. Let's create a little node program that takes a markdown file as an input, turns it into a Substance Article and stores it on the disk."
    },
    "header_3": {
      "type": "heading",
      "id": "header_3",
      "source_id": "setup",
      "content": "Setup",
      "level": 2
    },
    "text_14": {
      "type": "text",
      "id": "text_14",
      "source_id": null,
      "content": "With your console navigate to the first lesson."
    },
    "codeblock_4": {
      "type": "codeblock",
      "id": "codeblock_4",
      "source_id": "",
      "content": "$ cd 001-convert-md-to-substance"
    },
    "text_15": {
      "type": "text",
      "id": "text_15",
      "source_id": null,
      "content": "Pull-in dependencies using the Substance Screwdriver."
    },
    "text_16": {
      "type": "text",
      "id": "text_16",
      "source_id": null,
      "content": "$ substance --update"
    },
    "header_4": {
      "type": "heading",
      "id": "header_4",
      "source_id": "implementation",
      "content": "Implementation",
      "level": 2
    },
    "text_17": {
      "type": "text",
      "id": "text_17",
      "source_id": null,
      "content": "Now take a glance at the convert.js utility. That's all you need for a simple conversion tool, by just delegating the hard work to the Substance.Converter, and of course Pandoc."
    },
    "codeblock_5": {
      "type": "codeblock",
      "id": "codeblock_5",
      "source_id": "",
      "content": "var fs = require('fs');\nvar Converter = require(\"substance-converter\");\n\n// Parse command line arguments\n// -----------\n\nvar inputFile = process.argv[2];\nvar outputFile = process.argv[3];\n\n// Read markdown input\n// -----------\n\nvar inputDoc = fs.readFileSync(inputFile, \"utf8\");\n\n// Do the converstion\n// -----------\n\nvar converter = new Converter();\n\nconverter.convert(inputDoc, 'markdown', 'substance', function(err, doc) {\n  if (err) {\n    return console.error(err);\n  }\n  fs.writeFileSync(outputFile, JSON.stringify(doc, null, '  '));\n});"
    },
    "text_18": {
      "type": "text",
      "id": "text_18",
      "source_id": null,
      "content": "Now call your node program."
    },
    "codeblock_6": {
      "type": "codeblock",
      "id": "codeblock_6",
      "source_id": "",
      "content": "$ node convert.js lorem_ipsum.md lorem_ipsum.json"
    },
    "text_19": {
      "type": "text",
      "id": "text_19",
      "source_id": null,
      "content": "Great. Now try the same with your very own markdown file."
    },
    "header_5": {
      "type": "heading",
      "id": "header_5",
      "source_id": "display",
      "content": "Present your content",
      "level": 1
    },
    "text_20": {
      "type": "text",
      "id": "text_20",
      "source_id": null,
      "content": "In collaboration with eLife, we have developed an interactive reader for scientific documents which is based on the Substance Document Model, eLife Lens. In this lesson we'll be displaying your freshly generated Substance Article using a customized build of eLife Lens, the Substance.Reader."
    },
    "header_6": {
      "type": "heading",
      "id": "header_6",
      "source_id": "setup-1",
      "content": "Setup",
      "level": 2
    },
    "text_21": {
      "type": "text",
      "id": "text_21",
      "source_id": null,
      "content": "Navigate to lesson 2."
    },
    "codeblock_7": {
      "type": "codeblock",
      "id": "codeblock_7",
      "source_id": "",
      "content": "$ cd 002-display-document"
    },
    "text_22": {
      "type": "text",
      "id": "text_22",
      "source_id": null,
      "content": "The folder contains a stable build of the Substance.Reader. Since the document is loaded via AJAX, you just need to serve the folder through a webserver. The probably easiest way to do this is starting Python's SimpleHTTPServer, that's included in most operating systems."
    },
    "codeblock_8": {
      "type": "codeblock",
      "id": "codeblock_8",
      "source_id": "",
      "content": "$ python -m SimpleHTTPServer"
    },
    "text_23": {
      "type": "text",
      "id": "text_23",
      "source_id": null,
      "content": "Open your browser and navigate to http://localhost:8000. You should see a default document (Figure 1)."
    },
    "header_7": {
      "type": "heading",
      "id": "header_7",
      "source_id": "implementation-1",
      "content": "Implementation",
      "level": 2
    },
    "text_24": {
      "type": "text",
      "id": "text_24",
      "source_id": null,
      "content": "All you need to do is storing a copy of your Substance document in the data folder (e.g. data/mydoc.json. You also need to adjust index.html so it points to your document like so:"
    },
    "codeblock_9": {
      "type": "codeblock",
      "id": "codeblock_9",
      "source_id": "",
      "content": "var app = new Substance({\n  // Endpoint must have CORS enabled, or file is served from the same domain as the app\n  document_url: \"http://example.com/path/to/any-substance-doc.json\"\n});"
    },
    "header_8": {
      "type": "heading",
      "id": "header_8",
      "source_id": "renderer",
      "content": "Create a customized renderer",
      "level": 1
    },
    "text_25": {
      "type": "text",
      "id": "text_25",
      "source_id": null,
      "content": "This lesson is not yet ready."
    },
    "header_9": {
      "type": "heading",
      "id": "header_9",
      "source_id": "publish",
      "content": "Publish your document on Substance.io",
      "level": 1
    },
    "text_26": {
      "type": "text",
      "id": "text_26",
      "source_id": null,
      "content": "This lesson is not yet ready."
    },
    "link_5": {
      "type": "link",
      "id": "link_5",
      "path": [
        "text_8",
        "content"
      ],
      "range": [
        0,
        6
      ],
      "url": "http://johnmacfarlane.net/pandoc/"
    },
    "link_6": {
      "type": "link",
      "id": "link_6",
      "path": [
        "text_9",
        "content"
      ],
      "range": [
        26,
        44
      ],
      "url": "https://github.com/substance/tutorial"
    },
    "link_7": {
      "type": "link",
      "id": "link_7",
      "path": [
        "text_10",
        "content"
      ],
      "range": [
        160,
        172
      ],
      "url": "https://help.github.com/articles/using-pull-requests"
    },
    "link_8": {
      "type": "link",
      "id": "link_8",
      "path": [
        "text_11",
        "content"
      ],
      "range": [
        41,
        62
      ],
      "url": "http://github.com/substance/screwdriver"
    },
    "link_9": {
      "type": "link",
      "id": "link_9",
      "path": [
        "text_11",
        "content"
      ],
      "range": [
        211,
        214
      ],
      "url": "http://npmjs.org/"
    },
    "code_1": {
      "type": "code",
      "id": "code_1",
      "path": [
        "text_12",
        "content"
      ],
      "range": [
        34,
        43
      ]
    },
    "code_2": {
      "type": "code",
      "id": "code_2",
      "path": [
        "text_13",
        "content"
      ],
      "range": [
        65,
        79
      ]
    },
    "link_10": {
      "type": "link",
      "id": "link_10",
      "path": [
        "text_13",
        "content"
      ],
      "range": [
        110,
        127
      ],
      "url": "http://github.com/substance/article"
    },
    "code_3": {
      "type": "code",
      "id": "code_3",
      "path": [
        "text_17",
        "content"
      ],
      "range": [
        25,
        35
      ]
    },
    "link_11": {
      "type": "link",
      "id": "link_11",
      "path": [
        "text_20",
        "content"
      ],
      "range": [
        142,
        152
      ],
      "url": "http://lens.substance.io"
    },
    "code_4": {
      "type": "code",
      "id": "code_4",
      "path": [
        "text_23",
        "content"
      ],
      "range": [
        34,
        55
      ]
    },
    "code_5": {
      "type": "code",
      "id": "code_5",
      "path": [
        "text_24",
        "content"
      ],
      "range": [
        89,
        104
      ]
    },
    "code_6": {
      "type": "code",
      "id": "code_6",
      "path": [
        "text_24",
        "content"
      ],
      "range": [
        130,
        140
      ]
    },
    "figures": {
      "type": "view",
      "id": "figures",
      "nodes": [
        "figure_1"
      ]
    },
    "info": {
      "type": "view",
      "id": "info",
      "nodes": [
        "collaborator_1",
        "collaborator_2"
      ]
    },
    "collaborator_1": {
      "type": "collaborator",
      "id": "collaborator_1",
      "source_id": "",
      "name": "Michael Aufreiter",
      "role": "author",
      "organization": "Quasipartikel",
      "image": "https://2.gravatar.com/avatar/d5a959d7e57daa5433fcb9f8da40be4b?d=https%3A%2F%2Fidenticons.github.com%2F86c4ad52768c511046fea7b2d42b300c.png&s=420",
      "email": "ma@zive.at",
      "contribution": ""
    },
    "collaborator_2": {
      "type": "collaborator",
      "id": "collaborator_2",
      "source_id": "",
      "name": "Oliver Buchtala",
      "role": "author",
      "organization": "Quasipartikel",
      "image": "http://interior.substance.io/assets/images/team/oliver.png",
      "email": "ma@zive.at",
      "contribution": ""
    },
    "collaborator_reference_1": {
      "type": "person_reference",
      "id": "collaborator_reference_1",
      "path": [
        "cover",
        "authors",
        "1"
      ],
      "range": [
        0,
        17
      ],
      "target": "collaborator_1"
    },
    "collaborator_reference_2": {
      "type": "person_reference",
      "id": "collaborator_reference_2",
      "path": [
        "cover",
        "authors",
        "2"
      ],
      "range": [
        0,
        15
      ],
      "target": "collaborator_2"
    },
    "cover": {
      "type": "cover",
      "id": "cover",
      "source_id": "",
      "authors": [
        "collaborator_reference_1",
        "collaborator_reference_2"
      ],
      "image": ""
    },
    "caption_figure_1": {
      "type": "text",
      "id": "caption_figure_1",
      "source_id": null,
      "content": "A Substance document shown in the reader."
    },
    "figure_1": {
      "type": "figure",
      "id": "figure_1",
      "url": "http://f.cl.ly/items/0b132G3A2G3Q3o2l362d/Screen%20Shot%202013-10-07%20at%2011.45.15%20PM.png",
      "label": "Figure 1",
      "caption": "caption_figure_1"
    },
    "cross_reference_1": {
      "type": "cross_reference",
      "id": "cross_reference_1",
      "path": [
        "text_2",
        "content"
      ],
      "range": [
        7,
        14
      ],
      "target": "header_2"
    },
    "cross_reference_2": {
      "type": "cross_reference",
      "id": "cross_reference_2",
      "path": [
        "text_3",
        "content"
      ],
      "range": [
        0,
        7
      ],
      "target": "header_5"
    },
    "cross_reference_3": {
      "type": "cross_reference",
      "id": "cross_reference_3",
      "path": [
        "text_4",
        "content"
      ],
      "range": [
        20,
        28
      ],
      "target": "header_8"
    },
    "cross_reference_4": {
      "type": "cross_reference",
      "id": "cross_reference_4",
      "path": [
        "text_5",
        "content"
      ],
      "range": [
        0,
        6
      ],
      "target": "header_9"
    },
    "figure_reference_1": {
      "type": "figure_reference",
      "id": "figure_reference_1",
      "path": [
        "text_23",
        "content"
      ],
      "range": [
        92,
        100
      ],
      "target": "figure_1"
    }
  }
}