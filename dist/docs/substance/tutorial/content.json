{
  "id": "tutorial",
  "schema": [
    "substance-article",
    "0.1.0"
  ],
  "nodes": {
    "document": {
      "type": "document",
      "id": "document",
      "views": [
        "content",
        "figures",
        "info"
      ],
      "guid": "tutorial",
      "creator": "",
      "title": "Substance Tutorial",
      "abstract": "",
      "published_on": "2013-10-09T21:43:10.347Z",
      "meta": {}
    },
    "content": {
      "type": "view",
      "id": "content",
      "nodes": [
        "cover",
        "text_1",
        "list_1",
        "text_6",
        "header_1",
        "text_7",
        "list_2",
        "text_10",
        "codeblock_1",
        "text_11",
        "codeblock_2",
        "text_12",
        "codeblock_3",
        "header_2",
        "text_13",
        "header_3",
        "text_14",
        "codeblock_4",
        "text_15",
        "text_16",
        "header_4",
        "text_17",
        "codeblock_5",
        "text_18",
        "codeblock_6",
        "text_19",
        "header_5",
        "text_20",
        "header_6",
        "text_21",
        "codeblock_7",
        "text_22",
        "codeblock_8",
        "text_23",
        "header_7",
        "text_24",
        "codeblock_9",
        "header_8",
        "text_25",
        "text_26",
        "header_9",
        "text_27",
        "codeblock_10",
        "text_28",
        "codeblock_11",
        "header_10",
        "text_29",
        "codeblock_12",
        "text_30",
        "codeblock_13",
        "text_31",
        "codeblock_14",
        "text_32",
        "codeblock_15",
        "text_33",
        "text_34",
        "codeblock_16",
        "text_35",
        "header_11",
        "text_36",
        "text_37",
        "header_12",
        "text_38",
        "codeblock_17",
        "text_39",
        "text_40",
        "codeblock_18",
        "text_41",
        "codeblock_19",
        "text_42",
        "codeblock_20",
        "text_43",
        "codeblock_21",
        "header_13",
        "text_44",
        "text_45",
        "text_46",
        "codeblock_22",
        "text_47",
        "header_14",
        "text_48",
        "text_49",
        "codeblock_23",
        "text_50",
        "codeblock_24",
        "text_51",
        "header_15",
        "text_52",
        "text_53",
        "codeblock_25",
        "text_54",
        "codeblock_26",
        "text_55",
        "header_16",
        "text_56",
        "codeblock_27",
        "text_57"
      ]
    },
    "text_1": {
      "type": "text",
      "id": "text_1",
      "source_id": null,
      "content": "Welcome to the official Substance Tutorial. You'll learn:"
    },
    "text_2": {
      "type": "text",
      "id": "text_2",
      "source_id": null,
      "content": "How to convert a Markdown file into a Substance Article"
    },
    "text_3": {
      "type": "text",
      "id": "text_3",
      "source_id": null,
      "content": "Display Substance content in our interactive reader."
    },
    "text_4": {
      "type": "text",
      "id": "text_4",
      "source_id": null,
      "content": "Create a customized renderer"
    },
    "text_5": {
      "type": "text",
      "id": "text_5",
      "source_id": null,
      "content": "Submit a publication to Substance.io"
    },
    "list_1": {
      "type": "list",
      "id": "list_1",
      "source_id": "",
      "items": [
        "text_2",
        "text_3",
        "text_4",
        "text_5"
      ],
      "ordered": true
    },
    "text_6": {
      "type": "text",
      "id": "text_6",
      "source_id": null,
      "content": "The tutorial is at an early stage. We'd like to improve it over time and always keep it up to date with our latest API's. You can help us making this tutorial better by contributing to the source Markdown file and also to the example code."
    },
    "header_1": {
      "type": "heading",
      "id": "header_1",
      "source_id": "preparations",
      "content": "Preparations",
      "level": 1
    },
    "text_7": {
      "type": "text",
      "id": "text_7",
      "source_id": null,
      "content": "Make sure you have the following software packages installed on your computer before starting over with the tutorial."
    },
    "text_8": {
      "type": "text",
      "id": "text_8",
      "source_id": null,
      "content": "Node.js >=0.10.x"
    },
    "text_9": {
      "type": "text",
      "id": "text_9",
      "source_id": null,
      "content": "Pandoc >= 1.12.x"
    },
    "list_2": {
      "type": "list",
      "id": "list_2",
      "source_id": "",
      "items": [
        "text_8",
        "text_9"
      ],
      "ordered": false
    },
    "text_10": {
      "type": "text",
      "id": "text_10",
      "source_id": null,
      "content": "Please clone the Substance Tutorial repo, which has the complete code for the examples."
    },
    "codeblock_1": {
      "type": "codeblock",
      "id": "codeblock_1",
      "source_id": "",
      "content": "$ git clone https://github.com/substance/tutorial"
    },
    "text_11": {
      "type": "text",
      "id": "text_11",
      "source_id": null,
      "content": "Throughout our tutorial we are using the Substance Screwdriver for managing dependencies. The tutorial always runs against the latest stable dev versions. Please note that for all official releases we also provide NPM packages."
    },
    "codeblock_2": {
      "type": "codeblock",
      "id": "codeblock_2",
      "source_id": "",
      "content": "$ git clone https://github.com/substance/screwdriver.git\n$ cd screwdriver\n$ sudo python setup.py install"
    },
    "text_12": {
      "type": "text",
      "id": "text_12",
      "source_id": null,
      "content": "Now you should be able to run the substance program from the command line."
    },
    "codeblock_3": {
      "type": "codeblock",
      "id": "codeblock_3",
      "source_id": "",
      "content": "$ substance --help"
    },
    "header_2": {
      "type": "heading",
      "id": "header_2",
      "source_id": "convert",
      "content": "Turn a Markdown file into a Substance Article",
      "level": 1
    },
    "text_13": {
      "type": "text",
      "id": "text_13",
      "source_id": null,
      "content": "Here comes the first lesson. Let's suppose we have a markdown document lorem_ipsum.md that we'd like to turn into a Substance.Article. Substance ships with its own converter module, which makes use of Pandoc, a universal document conversion tool. Let's create a little node program that takes a Markdown file as an input, turns it into a Substance Article and stores the resulting JSON on disk."
    },
    "header_3": {
      "type": "heading",
      "id": "header_3",
      "source_id": "setup",
      "content": "Setup",
      "level": 2
    },
    "text_14": {
      "type": "text",
      "id": "text_14",
      "source_id": null,
      "content": "With your console navigate to the first lesson."
    },
    "codeblock_4": {
      "type": "codeblock",
      "id": "codeblock_4",
      "source_id": "",
      "content": "$ cd 001-convert-md-to-substance"
    },
    "text_15": {
      "type": "text",
      "id": "text_15",
      "source_id": null,
      "content": "Pull-in dependencies using the Substance Screwdriver."
    },
    "text_16": {
      "type": "text",
      "id": "text_16",
      "source_id": null,
      "content": "$ substance --update"
    },
    "header_4": {
      "type": "heading",
      "id": "header_4",
      "source_id": "procedure",
      "content": "Procedure",
      "level": 2
    },
    "text_17": {
      "type": "text",
      "id": "text_17",
      "source_id": null,
      "content": "Now take a glance at the convert.js utility. That's all you need for a simple conversion tool, by just delegating the hard work to the Substance.Converter, and of course Pandoc."
    },
    "codeblock_5": {
      "type": "codeblock",
      "id": "codeblock_5",
      "source_id": "",
      "content": "var fs = require('fs');\nvar Converter = require(\"substance-converter\");\n\n// Parse command line arguments\n// -----------\n\nvar inputFile = process.argv[2];\nvar outputFile = process.argv[3];\n\n// Read markdown input\n// -----------\n\nvar inputDoc = fs.readFileSync(inputFile, \"utf8\");\n\n// Do the converstion\n// -----------\n\nvar converter = new Converter();\n\nconverter.convert(inputDoc, 'markdown', 'substance', function(err, doc) {\n  if (err) {\n    return console.error(err);\n  }\n  fs.writeFileSync(outputFile, JSON.stringify(doc, null, '  '));\n});"
    },
    "text_18": {
      "type": "text",
      "id": "text_18",
      "source_id": null,
      "content": "Call your node program, to finally perform the conversion."
    },
    "codeblock_6": {
      "type": "codeblock",
      "id": "codeblock_6",
      "source_id": "",
      "content": "$ node convert.js lorem_ipsum.md lorem_ipsum.json"
    },
    "text_19": {
      "type": "text",
      "id": "text_19",
      "source_id": null,
      "content": "Great. Now try the same with your very own Markdown document. If you don't get to convert your markdown file, please let us know in the issue tracker."
    },
    "header_5": {
      "type": "heading",
      "id": "header_5",
      "source_id": "display",
      "content": "Present your article",
      "level": 1
    },
    "text_20": {
      "type": "text",
      "id": "text_20",
      "source_id": null,
      "content": "In collaboration with eLife, we have developed an interactive reader for scientific documents which is based on the Substance Document Model, eLife Lens. In this lesson we'll be displaying your freshly generated Substance Article using a customized build of eLife Lens, the Substance.Reader."
    },
    "header_6": {
      "type": "heading",
      "id": "header_6",
      "source_id": "setup-1",
      "content": "Setup",
      "level": 2
    },
    "text_21": {
      "type": "text",
      "id": "text_21",
      "source_id": null,
      "content": "Navigate to lesson 2."
    },
    "codeblock_7": {
      "type": "codeblock",
      "id": "codeblock_7",
      "source_id": "",
      "content": "$ cd 002-display-document"
    },
    "text_22": {
      "type": "text",
      "id": "text_22",
      "source_id": null,
      "content": "The folder contains a stable build of the Substance.Reader. Since the document is loaded via AJAX, you just need to serve the folder through a webserver. The probably easiest way to do this is starting Python's SimpleHTTPServer, that ships with most operating systems."
    },
    "codeblock_8": {
      "type": "codeblock",
      "id": "codeblock_8",
      "source_id": "",
      "content": "$ python -m SimpleHTTPServer"
    },
    "text_23": {
      "type": "text",
      "id": "text_23",
      "source_id": null,
      "content": "Open your browser and navigate to http://localhost:8000. You should see a default document (Figure 1)."
    },
    "header_7": {
      "type": "heading",
      "id": "header_7",
      "source_id": "procedure-1",
      "content": "Procedure",
      "level": 2
    },
    "text_24": {
      "type": "text",
      "id": "text_24",
      "source_id": null,
      "content": "Now store a copy of your Substance document in the data folder (e.g. data/mydoc.json. You also need to adjust index.html so it points to your document like so:"
    },
    "codeblock_9": {
      "type": "codeblock",
      "id": "codeblock_9",
      "source_id": "",
      "content": "var app = new Substance({\n  // Endpoint must have CORS enabled, or file is served from the same domain as the app\n  document_url: \"http://example.com/path/to/any-substance-doc.json\"\n});"
    },
    "header_8": {
      "type": "heading",
      "id": "header_8",
      "source_id": "renderer",
      "content": "Create a customized renderer",
      "level": 1
    },
    "text_25": {
      "type": "text",
      "id": "text_25",
      "source_id": null,
      "content": "Displaying the document in the official Substance.Reader is great, but what if you wanted to present your article in a more customized fashion?"
    },
    "text_26": {
      "type": "text",
      "id": "text_26",
      "source_id": null,
      "content": "You don't have to write it from scratch. You can utilize Substance.Surface which powers our reader and editor."
    },
    "header_9": {
      "type": "heading",
      "id": "header_9",
      "source_id": "setup-2",
      "content": "Setup",
      "level": 2
    },
    "text_27": {
      "type": "text",
      "id": "text_27",
      "source_id": null,
      "content": "Navigate to lesson 3."
    },
    "codeblock_10": {
      "type": "codeblock",
      "id": "codeblock_10",
      "source_id": "",
      "content": "$ cd 003-customized-renderer"
    },
    "text_28": {
      "type": "text",
      "id": "text_28",
      "source_id": null,
      "content": "Again start our little Python server."
    },
    "codeblock_11": {
      "type": "codeblock",
      "id": "codeblock_11",
      "source_id": "",
      "content": "$ python -m SimpleHTTPServer"
    },
    "header_10": {
      "type": "heading",
      "id": "header_10",
      "source_id": "procedure-2",
      "content": "Procedure",
      "level": 2
    },
    "text_29": {
      "type": "text",
      "id": "text_29",
      "source_id": null,
      "content": "Using the surface is really easy. The first thing to do is constructing a Substance.Article based on our JSON input."
    },
    "codeblock_12": {
      "type": "codeblock",
      "id": "codeblock_12",
      "source_id": "",
      "content": "var doc = Substance.Article.fromSnapshot(loremIpsumDoc);"
    },
    "text_30": {
      "type": "text",
      "id": "text_30",
      "source_id": null,
      "content": "A Substance document stores multiple views on its content (Figure 2). In our case we're interested in the content view. Therefore we create a Document.Controller instance that we need to paramatrize the Surface."
    },
    "codeblock_13": {
      "type": "codeblock",
      "id": "codeblock_13",
      "source_id": "",
      "content": "var docCtrl = new Substance.Document.Controller(doc, {\n  view: \"content\"\n});"
    },
    "text_31": {
      "type": "text",
      "id": "text_31",
      "source_id": null,
      "content": "Now we are ready to create the Substance.Surface instance."
    },
    "codeblock_14": {
      "type": "codeblock",
      "id": "codeblock_14",
      "source_id": "",
      "content": "var surface = new Substance.Surface(docCtrl, {\n  editable: false\n});"
    },
    "text_32": {
      "type": "text",
      "id": "text_32",
      "source_id": null,
      "content": "Let's wait until the DOM is ready and then render the document and attach it to the body element."
    },
    "codeblock_15": {
      "type": "codeblock",
      "id": "codeblock_15",
      "source_id": "",
      "content": "$(function() {\n  $('body').append(surface.render().el);\n});"
    },
    "text_33": {
      "type": "text",
      "id": "text_33",
      "source_id": null,
      "content": "The markup that is produced by the Surface using the Substance.Article definition is pretty straight forward (Figure 3)."
    },
    "text_34": {
      "type": "text",
      "id": "text_34",
      "source_id": null,
      "content": "You can easiliy come up with your very own CSS styles. For instance let's add some styles for headings."
    },
    "codeblock_16": {
      "type": "codeblock",
      "id": "codeblock_16",
      "source_id": "",
      "content": ".surface.content .content-node.heading {\n  font-weight: bold;\n  color: #0089D3;\n}\n\n.surface.content .content-node.heading.level-1 {\n  font-size: 25px;\n}"
    },
    "text_35": {
      "type": "text",
      "id": "text_35",
      "source_id": null,
      "content": "A more complete functioning codebsae is located in the index.html file and article.css."
    },
    "header_11": {
      "type": "heading",
      "id": "header_11",
      "source_id": "publish",
      "content": "Publish an article on Substance.io",
      "level": 1
    },
    "text_36": {
      "type": "text",
      "id": "text_36",
      "source_id": null,
      "content": "We'd like to invite you do publish guest articles on Substance.io. We'll create new collections on demand to categorize articles coming from the community."
    },
    "text_37": {
      "type": "text",
      "id": "text_37",
      "source_id": null,
      "content": "Substance.io is powered by our minimal publishing system, IO. It lets you write your articles in Markdown and define figures, tables etc. in a simple JSON syntax. All that input is compiled into a full-fledged Substance Article including the main content, meta information like the title and authors and figures you have specified. It works similarly to Jekyll, a static site generator written in Ruby. Compiled IO document repositories can be hosted on any webserver. It's only static files."
    },
    "header_12": {
      "type": "heading",
      "id": "header_12",
      "source_id": "setup-3",
      "content": "Setup",
      "level": 2
    },
    "text_38": {
      "type": "text",
      "id": "text_38",
      "source_id": null,
      "content": "First, download and run IO locally."
    },
    "codeblock_17": {
      "type": "codeblock",
      "id": "codeblock_17",
      "source_id": "",
      "content": "$ git clone https://github.com/substance/io.git\n$ cd io"
    },
    "text_39": {
      "type": "text",
      "id": "text_39",
      "source_id": null,
      "content": "The proposed workflow for adding your own docs is forking the Substance Docs repository, and pointing IO to it."
    },
    "text_40": {
      "type": "text",
      "id": "text_40",
      "source_id": null,
      "content": "Thus in your project.json change:"
    },
    "codeblock_18": {
      "type": "codeblock",
      "id": "codeblock_18",
      "source_id": "",
      "content": "{\n  \"repository\": \"https://github.com/substance/docs.git\",\n  \"folder\": \"docs\",\n  \"branch\": \"0.1.x\"\n},"
    },
    "text_41": {
      "type": "text",
      "id": "text_41",
      "source_id": null,
      "content": "to"
    },
    "codeblock_19": {
      "type": "codeblock",
      "id": "codeblock_19",
      "source_id": "",
      "content": "{\n  \"repository\": \"https://github.com/your_user/docs.git\",\n  \"folder\": \"docs\",\n  \"branch\": \"0.1.x\"\n},"
    },
    "text_42": {
      "type": "text",
      "id": "text_42",
      "source_id": null,
      "content": "Now pull in the dependencies."
    },
    "codeblock_20": {
      "type": "codeblock",
      "id": "codeblock_20",
      "source_id": "",
      "content": "$ substance --update"
    },
    "text_43": {
      "type": "text",
      "id": "text_43",
      "source_id": null,
      "content": "Run IO and point your browser to http://localhost:5000."
    },
    "codeblock_21": {
      "type": "codeblock",
      "id": "codeblock_21",
      "source_id": "",
      "content": "$ substance"
    },
    "header_13": {
      "type": "heading",
      "id": "header_13",
      "source_id": "add-a-new-collection",
      "content": "Add a new collection",
      "level": 2
    },
    "text_44": {
      "type": "text",
      "id": "text_44",
      "source_id": null,
      "content": "Let's suppose you'd like to write an article about Javascript Inheritance. All you need is your favorite text editor."
    },
    "text_45": {
      "type": "text",
      "id": "text_45",
      "source_id": null,
      "content": "Let's add a new collection Javascript by just creating a folder javascript within the docs folder."
    },
    "text_46": {
      "type": "text",
      "id": "text_46",
      "source_id": null,
      "content": "Every collection requires to have have some meta-information attached, which are specified in an index.json file."
    },
    "codeblock_22": {
      "type": "codeblock",
      "id": "codeblock_22",
      "source_id": "",
      "content": "{\n  \"name\": \"Javascript\",\n  \"published\": true,\n  \"updated_at\": \"2013-11-30\",\n  \"image\": \"http://example.com/javascript.png\",\n  \"description\": \"Javascript-related articles.\"\n}"
    },
    "text_47": {
      "type": "text",
      "id": "text_47",
      "source_id": null,
      "content": "Now point your browser to http://localhost:5000/#explore and you should see the Javascript collection."
    },
    "header_14": {
      "type": "heading",
      "id": "header_14",
      "source_id": "add-a-new-document",
      "content": "Add a new document",
      "level": 2
    },
    "text_48": {
      "type": "text",
      "id": "text_48",
      "source_id": null,
      "content": "Each document lives in a folder within the collection. Let's create a folder docs/javascript/inheritance. Every document requires to have an index.json containing meta-information as well as a content.md which has the document's main content."
    },
    "text_49": {
      "type": "text",
      "id": "text_49",
      "source_id": null,
      "content": "Our index.json could look like this:"
    },
    "codeblock_23": {
      "type": "codeblock",
      "id": "codeblock_23",
      "source_id": "",
      "content": "{\n  \"title\": \"Understanding Javascript Inheritance\",\n  \"published\": true,\n  \"published_on\": \"2013-10-05\",\n  \"collaborators\": [\n    {\n      \"name\": \"John Doe\"\n    }\n  ]\n}"
    },
    "text_50": {
      "type": "text",
      "id": "text_50",
      "source_id": null,
      "content": "And a sample content.md."
    },
    "codeblock_24": {
      "type": "codeblock",
      "id": "codeblock_24",
      "source_id": "",
      "content": "A lesson about JS inheritance.\n\n1. Constructor functions\n2. prototype\n3. new"
    },
    "text_51": {
      "type": "text",
      "id": "text_51",
      "source_id": null,
      "content": "You you can preview at any time by refreshing http://localhost:5000/javascript/inheritance in your browser."
    },
    "header_15": {
      "type": "heading",
      "id": "header_15",
      "source_id": "figures",
      "content": "Figures",
      "level": 2
    },
    "text_52": {
      "type": "text",
      "id": "text_52",
      "source_id": null,
      "content": "Markdown has limitations when it comes to rich content, e.g. tables and figures. With Substance you can specify figures and tables in a separate file and reference them from your main document using markdown syntax."
    },
    "text_53": {
      "type": "text",
      "id": "text_53",
      "source_id": null,
      "content": "Let's add an illustrative figure to our article by creating a resources.json file in our article folder."
    },
    "codeblock_25": {
      "type": "codeblock",
      "id": "codeblock_25",
      "source_id": "",
      "content": "{\n  \"figures\": [\n    {\n      \"id\": \"figure_1\",\n      \"type\": \"figure\",\n      \"label\": \"Figure 1\",\n      \"url\": \"http://example.com/js-inheritance.png\",\n      \"caption\": \"Illustration describing the functioning of the prototype chain in Javascript\"\n    }\n  ]\n}"
    },
    "text_54": {
      "type": "text",
      "id": "text_54",
      "source_id": null,
      "content": "Now reference that figure in your main text using its id."
    },
    "codeblock_26": {
      "type": "codeblock",
      "id": "codeblock_26",
      "source_id": "",
      "content": "In Javascript there's a concept called Prototypal Inheritance ([Figure 1](figure_1))."
    },
    "text_55": {
      "type": "text",
      "id": "text_55",
      "source_id": null,
      "content": "Soon you'll be able to manage citations as well."
    },
    "header_16": {
      "type": "heading",
      "id": "header_16",
      "source_id": "submit-your-article",
      "content": "Submit your article",
      "level": 2
    },
    "text_56": {
      "type": "text",
      "id": "text_56",
      "source_id": null,
      "content": "Commit your changes using Git."
    },
    "codeblock_27": {
      "type": "codeblock",
      "id": "codeblock_27",
      "source_id": "",
      "content": "$ cd docs\n$ git add javascript/inheritance/index.json <...>\n$ git commit\n$ git push origin 0.1.x"
    },
    "text_57": {
      "type": "text",
      "id": "text_57",
      "source_id": null,
      "content": "Now that you pushed your changes to your fork, the last step is filing a Pull Request on Github. We'll review your submitted article and put it live as soon as possible."
    },
    "link_5": {
      "type": "link",
      "id": "link_5",
      "path": [
        "text_6",
        "content"
      ],
      "range": [
        196,
        209
      ],
      "url": "https://github.com/substance/docs/blob/0.1.x/substance/tutorial/content.md"
    },
    "link_6": {
      "type": "link",
      "id": "link_6",
      "path": [
        "text_6",
        "content"
      ],
      "range": [
        226,
        238
      ],
      "url": "http://github.com/substance/tutorial"
    },
    "emphasis_1": {
      "type": "emphasis",
      "id": "emphasis_1",
      "path": [
        "text_6",
        "content"
      ],
      "range": [
        0,
        239
      ]
    },
    "link_7": {
      "type": "link",
      "id": "link_7",
      "path": [
        "text_8",
        "content"
      ],
      "range": [
        0,
        7
      ],
      "url": "http://nodejs.org/"
    },
    "link_8": {
      "type": "link",
      "id": "link_8",
      "path": [
        "text_9",
        "content"
      ],
      "range": [
        0,
        6
      ],
      "url": "http://johnmacfarlane.net/pandoc/"
    },
    "link_9": {
      "type": "link",
      "id": "link_9",
      "path": [
        "text_10",
        "content"
      ],
      "range": [
        17,
        35
      ],
      "url": "https://github.com/substance/tutorial"
    },
    "link_10": {
      "type": "link",
      "id": "link_10",
      "path": [
        "text_11",
        "content"
      ],
      "range": [
        41,
        62
      ],
      "url": "http://github.com/substance/screwdriver"
    },
    "link_11": {
      "type": "link",
      "id": "link_11",
      "path": [
        "text_11",
        "content"
      ],
      "range": [
        214,
        217
      ],
      "url": "http://npmjs.org/"
    },
    "code_1": {
      "type": "code",
      "id": "code_1",
      "path": [
        "text_12",
        "content"
      ],
      "range": [
        34,
        43
      ]
    },
    "code_2": {
      "type": "code",
      "id": "code_2",
      "path": [
        "text_13",
        "content"
      ],
      "range": [
        71,
        85
      ]
    },
    "link_12": {
      "type": "link",
      "id": "link_12",
      "path": [
        "text_13",
        "content"
      ],
      "range": [
        116,
        133
      ],
      "url": "http://github.com/substance/article"
    },
    "link_13": {
      "type": "link",
      "id": "link_13",
      "path": [
        "text_13",
        "content"
      ],
      "range": [
        164,
        173
      ],
      "url": "http://github.com/substance/converter"
    },
    "code_3": {
      "type": "code",
      "id": "code_3",
      "path": [
        "text_17",
        "content"
      ],
      "range": [
        25,
        35
      ]
    },
    "link_14": {
      "type": "link",
      "id": "link_14",
      "path": [
        "text_19",
        "content"
      ],
      "range": [
        136,
        149
      ],
      "url": "https://github.com/substance/converter/issues"
    },
    "link_15": {
      "type": "link",
      "id": "link_15",
      "path": [
        "text_20",
        "content"
      ],
      "range": [
        22,
        27
      ],
      "url": "http://elifesciences.org"
    },
    "link_16": {
      "type": "link",
      "id": "link_16",
      "path": [
        "text_20",
        "content"
      ],
      "range": [
        142,
        152
      ],
      "url": "http://lens.substance.io"
    },
    "code_4": {
      "type": "code",
      "id": "code_4",
      "path": [
        "text_23",
        "content"
      ],
      "range": [
        34,
        55
      ]
    },
    "code_5": {
      "type": "code",
      "id": "code_5",
      "path": [
        "text_24",
        "content"
      ],
      "range": [
        69,
        84
      ]
    },
    "code_6": {
      "type": "code",
      "id": "code_6",
      "path": [
        "text_24",
        "content"
      ],
      "range": [
        110,
        120
      ]
    },
    "link_18": {
      "type": "link",
      "id": "link_18",
      "path": [
        "text_26",
        "content"
      ],
      "range": [
        57,
        74
      ],
      "url": "http://github.com/substance/surface"
    },
    "code_7": {
      "type": "code",
      "id": "code_7",
      "path": [
        "text_29",
        "content"
      ],
      "range": [
        74,
        91
      ]
    },
    "code_8": {
      "type": "code",
      "id": "code_8",
      "path": [
        "text_30",
        "content"
      ],
      "range": [
        106,
        113
      ]
    },
    "code_9": {
      "type": "code",
      "id": "code_9",
      "path": [
        "text_30",
        "content"
      ],
      "range": [
        142,
        161
      ]
    },
    "code_10": {
      "type": "code",
      "id": "code_10",
      "path": [
        "text_30",
        "content"
      ],
      "range": [
        203,
        210
      ]
    },
    "code_11": {
      "type": "code",
      "id": "code_11",
      "path": [
        "text_33",
        "content"
      ],
      "range": [
        53,
        70
      ]
    },
    "code_12": {
      "type": "code",
      "id": "code_12",
      "path": [
        "text_35",
        "content"
      ],
      "range": [
        55,
        65
      ]
    },
    "code_13": {
      "type": "code",
      "id": "code_13",
      "path": [
        "text_35",
        "content"
      ],
      "range": [
        75,
        86
      ]
    },
    "link_21": {
      "type": "link",
      "id": "link_21",
      "path": [
        "text_37",
        "content"
      ],
      "range": [
        58,
        60
      ],
      "url": "http://github.com/substance/io"
    },
    "link_22": {
      "type": "link",
      "id": "link_22",
      "path": [
        "text_37",
        "content"
      ],
      "range": [
        354,
        360
      ],
      "url": "http://jekyllrb.com/"
    },
    "link_23": {
      "type": "link",
      "id": "link_23",
      "path": [
        "text_39",
        "content"
      ],
      "range": [
        50,
        57
      ],
      "url": "https://help.github.com/articles/fork-a-repo"
    },
    "link_24": {
      "type": "link",
      "id": "link_24",
      "path": [
        "text_39",
        "content"
      ],
      "range": [
        62,
        76
      ],
      "url": "http://github.com/substance/docs"
    },
    "code_14": {
      "type": "code",
      "id": "code_14",
      "path": [
        "text_40",
        "content"
      ],
      "range": [
        13,
        25
      ]
    },
    "code_15": {
      "type": "code",
      "id": "code_15",
      "path": [
        "text_43",
        "content"
      ],
      "range": [
        33,
        54
      ]
    },
    "code_16": {
      "type": "code",
      "id": "code_16",
      "path": [
        "text_45",
        "content"
      ],
      "range": [
        64,
        74
      ]
    },
    "code_17": {
      "type": "code",
      "id": "code_17",
      "path": [
        "text_46",
        "content"
      ],
      "range": [
        97,
        107
      ]
    },
    "code_18": {
      "type": "code",
      "id": "code_18",
      "path": [
        "text_47",
        "content"
      ],
      "range": [
        26,
        56
      ]
    },
    "code_19": {
      "type": "code",
      "id": "code_19",
      "path": [
        "text_48",
        "content"
      ],
      "range": [
        77,
        104
      ]
    },
    "code_20": {
      "type": "code",
      "id": "code_20",
      "path": [
        "text_48",
        "content"
      ],
      "range": [
        141,
        151
      ]
    },
    "code_21": {
      "type": "code",
      "id": "code_21",
      "path": [
        "text_48",
        "content"
      ],
      "range": [
        193,
        203
      ]
    },
    "code_22": {
      "type": "code",
      "id": "code_22",
      "path": [
        "text_50",
        "content"
      ],
      "range": [
        13,
        23
      ]
    },
    "code_23": {
      "type": "code",
      "id": "code_23",
      "path": [
        "text_51",
        "content"
      ],
      "range": [
        46,
        90
      ]
    },
    "code_24": {
      "type": "code",
      "id": "code_24",
      "path": [
        "text_53",
        "content"
      ],
      "range": [
        62,
        76
      ]
    },
    "link_25": {
      "type": "link",
      "id": "link_25",
      "path": [
        "text_57",
        "content"
      ],
      "range": [
        73,
        85
      ],
      "url": "https://help.github.com/articles/using-pull-requests"
    },
    "figures": {
      "type": "view",
      "id": "figures",
      "nodes": [
        "figure_1",
        "figure_2",
        "figure_3"
      ]
    },
    "info": {
      "type": "view",
      "id": "info",
      "nodes": [
        "collaborator_1",
        "collaborator_2"
      ]
    },
    "collaborator_1": {
      "type": "collaborator",
      "id": "collaborator_1",
      "source_id": "",
      "name": "Michael Aufreiter",
      "role": "author",
      "organization": "Quasipartikel",
      "image": "https://2.gravatar.com/avatar/d5a959d7e57daa5433fcb9f8da40be4b?d=https%3A%2F%2Fidenticons.github.com%2F86c4ad52768c511046fea7b2d42b300c.png&s=420",
      "email": "michael@substance.io",
      "contribution": ""
    },
    "collaborator_2": {
      "type": "collaborator",
      "id": "collaborator_2",
      "source_id": "",
      "name": "Oliver Buchtala",
      "role": "author",
      "organization": "Quasipartikel",
      "image": "http://interior.substance.io/assets/images/team/oliver.png",
      "email": "oliver.buchtala@gmail.com",
      "contribution": ""
    },
    "collaborator_reference_1": {
      "type": "person_reference",
      "id": "collaborator_reference_1",
      "path": [
        "cover",
        "authors",
        "1"
      ],
      "range": [
        0,
        17
      ],
      "target": "collaborator_1"
    },
    "collaborator_reference_2": {
      "type": "person_reference",
      "id": "collaborator_reference_2",
      "path": [
        "cover",
        "authors",
        "2"
      ],
      "range": [
        0,
        15
      ],
      "target": "collaborator_2"
    },
    "cover": {
      "type": "cover",
      "id": "cover",
      "source_id": "",
      "authors": [
        "collaborator_reference_1",
        "collaborator_reference_2"
      ],
      "image": ""
    },
    "caption_figure_1": {
      "type": "text",
      "id": "caption_figure_1",
      "source_id": null,
      "content": "A Substance document shown in our reader app."
    },
    "figure_1": {
      "type": "figure",
      "id": "figure_1",
      "url": "http://f.cl.ly/items/0b132G3A2G3Q3o2l362d/Screen%20Shot%202013-10-07%20at%2011.45.15%20PM.png",
      "label": "Figure 1",
      "caption": "caption_figure_1"
    },
    "caption_figure_2": {
      "type": "text",
      "id": "caption_figure_2",
      "source_id": null,
      "content": "A Substance document can handle multiple views on its content nodes."
    },
    "figure_2": {
      "type": "figure",
      "id": "figure_2",
      "url": "http://f.cl.ly/items/0J3m3D3Z2u3E292A1j3T/lens-document-views.png",
      "label": "Figure 2",
      "caption": "caption_figure_2"
    },
    "caption_figure_3": {
      "type": "text",
      "id": "caption_figure_3",
      "source_id": null,
      "content": "Markup produced by the Substance Surface."
    },
    "figure_3": {
      "type": "figure",
      "id": "figure_3",
      "url": "http://f.cl.ly/items/0z0s1k1B0c0o0a2h0i3L/Screen%20Shot%202013-10-09%20at%201.48.58%20PM.png",
      "label": "Figure 3",
      "caption": "caption_figure_3"
    },
    "cross_reference_1": {
      "type": "cross_reference",
      "id": "cross_reference_1",
      "path": [
        "text_2",
        "content"
      ],
      "range": [
        7,
        14
      ],
      "target": "header_2"
    },
    "cross_reference_2": {
      "type": "cross_reference",
      "id": "cross_reference_2",
      "path": [
        "text_3",
        "content"
      ],
      "range": [
        0,
        7
      ],
      "target": "header_5"
    },
    "cross_reference_3": {
      "type": "cross_reference",
      "id": "cross_reference_3",
      "path": [
        "text_4",
        "content"
      ],
      "range": [
        20,
        28
      ],
      "target": "header_8"
    },
    "cross_reference_4": {
      "type": "cross_reference",
      "id": "cross_reference_4",
      "path": [
        "text_5",
        "content"
      ],
      "range": [
        0,
        6
      ],
      "target": "header_11"
    },
    "figure_reference_1": {
      "type": "figure_reference",
      "id": "figure_reference_1",
      "path": [
        "text_23",
        "content"
      ],
      "range": [
        92,
        100
      ],
      "target": "figure_1"
    },
    "figure_reference_2": {
      "type": "figure_reference",
      "id": "figure_reference_2",
      "path": [
        "text_30",
        "content"
      ],
      "range": [
        59,
        67
      ],
      "target": "figure_2"
    },
    "figure_reference_3": {
      "type": "figure_reference",
      "id": "figure_reference_3",
      "path": [
        "text_33",
        "content"
      ],
      "range": [
        110,
        118
      ],
      "target": "figure_3"
    }
  }
}